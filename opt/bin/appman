#!/bin/sh

URL1="https://raw.githubusercontent.com/ivan-hc/AppMan/main/opt/bin"
URL2="https://raw.githubusercontent.com/ivan-hc/AppMan/main/applications"
LOCAL1=".local/share/applications"
LOCAL2=".local/share/icons"

cd /opt/bin
case "$1" in
  ''|'-h'|'help') echo "
  AppMan - App Manager for GNU/Linux that uses and creates AppImages

  Usage:	appman [option] [argument]
  where option include:
  
  -a, about	Show basic info on each application, link to the website
  		and/or the source and how to update some applications.  
  -i, install 	Install a program.
  -r, remove	Remove a program. 
  
  Usage:	appman [option]
  where option include:

  -h, help	Print this message.
  -c, clean	Remove all unnecessary files and folders, i.e. backup
  		files, installation scripts, and temporary folders.
  -f, files	Programs installed on the system.
  -l, list	Shows the list of apps available in the repository.
  -s, sync	Updates the list of available apps.
  -u, update	Update AppImages using 'appimageupdate', if the update
  		info is embedded into the AppImage itself by the developer.

   
  SITE: https://github.com/ivan-hc/AppMan
  
  " ;;

  '-f'|'files') echo ""; echo "  Applications installed on the system:"; echo ""; ls /opt/bin; echo "" ;;
  '-l'|'list') echo ""; echo "  List of applications available in the AppMan repository:"; echo "";
  	ls /home/$USER/.cache/appman-list 2>/dev/null ; echo "" ;;
  '-u'|'update') cd /opt/bin && for f in *; do appimageupdate -O "$f"; done ;;
  '-c'|'clean') cd /opt/bin; echo ""; echo "Removing all unnecessary files and folders..."; sleep 1;
	echo ""; rm -R *zs-old tmp *-installer; echo ""; echo "All unnecessary files and folders are removed, exiting."; echo "" ;;
  '-s'|'sync') echo "Updating application's list, please wait...";
  	cd /opt/bin; mv ./appman ./appman-zs-old; wget -q $URL1/appman && chmod a+x ./appman;
	rm -R -f /home/$USER/.cache/appman-list; mkdir /home/$USER/.cache/appman-list; cd /home/$USER/.cache/appman-list;
	wget -q --recursive --no-parent -nd https://github.com/ivan-hc/AppMan/tree/main/applications;
	rm ./applications ./robots.txt; echo "...done!";;

# ABOUT
# MODEL	'APP') echo ""; echo "DESCRIPTION."; echo ""; echo " UPDATE:"; echo ""; echo "SITE: URL"; echo "";;
#
  '-a'|'about')
	while [ -n "$1" ]
	do
	case $2 in
	'appimagetool') echo ""; echo "Appimagetool is used to generate an AppImage from an existing AppDir."; echo ""; echo " UPDATE: appman -u"; echo ""; echo "SITE: https://github.com/AppImage/AppImageKit"; echo "";;
	'appimageupdate') echo ""; echo "AppImageUpdate lets you update AppImages using information embedded in the AppImage itself, if provided by the developer of the AppImage."; echo ""; echo " UPDATE: appman -u"; echo ""; echo "SITE: https://github.com/AppImage/AppImageUpdate"; echo "";;
	'appman') echo ""; echo "AppMan - App Manager for GNU/Linux."; echo ""; echo " UPDATE: appman -s"; echo ""; echo "SITE: https://github.com/ivan-hc/AppMan"; echo "";;
	'adb'|'fastboot'|'platform-tools') echo ""; echo "Platform Tools - Command line utilities to manage Android devices."; echo ""; echo " UPDATE: appman -i adb"; echo ""; echo "SITE: https://developer.android.com/studio/releases/platform-tools"; echo "";;
	'anydesk') echo ""; echo "AnyDesk - Remote desktop application."; echo ""; echo " UPDATE: appman -i anydesk"; echo ""; echo "SITE: https://anydesk.com"; echo "";;
	'audacity') echo ""; echo "Audacity - Multiplatform Audio Editor."; echo ""; echo " UPDATE: appman -u"; echo ""; echo "SITE: https://www.audacityteam.org"; echo "";;
	'avidemux') echo ""; echo "Avidemux - Multiplatform Video Editor."; echo "This version come from Debian Multimedia."; echo ""; echo "SITE: http://avidemux.sourceforge.net"; echo "";;
	'blender') echo ""; echo "Blender - 3D creation suite."; echo ""; echo "SITE: https://www.blendernation.com"; echo "SOURCE: https://github.com/Songtech-0912/Prometheus-Project"; echo "";;
	'bottles'|'wine-bottles') echo ""; echo "Bottles - Profile manager for WINE to easily install Windows apps."; echo ""; echo "SOURCE: https://github.com/bottlesdevs/Bottles"; echo "";;
	'brave'|'brave-browser') echo ""; echo "Brave - A privacy oriented Web Browser based on Chromium."; echo ""; echo " UPDATE: appman -i brave"; echo ""; echo "SITE: https://brave.com/"; echo "SOURCE: https://github.com/AppImage/pkg2appimage"; echo "";;
	'celestia'|'celestia-dev') echo ""; echo "Celestia - Real time 3D space simulator."; echo ""; echo " UPDATE: appman -u"; echo ""; echo "SITE: https://celestia.space"; echo "SOURCE: https://download.opensuse.org/repositories/home:/munix9/AppImage/"; echo "";;
	'chromium') echo ""; echo "Chromium - Open source version of Google Chrome, Brave and other Web Browsers."; echo ""; echo " UPDATE: appman -i chromium"; echo ""; echo "SITE: https://www.chromium.org"; echo "SOURCE: http://packages.linuxmint.com"; echo "";;
	'chromium-dev'|'chromium-beta') echo ""; echo "Chromium-dev - Nightly build of Chromium Web Browser."; echo ""; echo " UPDATE: appman -i chromium-dev"; echo ""; echo "SITE: https://www.chromium.org/"; echo "SOURCE: https://github.com/AppImage/pkg2appimage"; echo "";;
	'duckstation'|'duckstation-qt') echo ""; echo "DuckStation - PlayStation 1, aka PSX Emulator."; echo ""; echo " UPDATE: appman -u"; echo ""; echo "SITE: https://www.duckstation.org"; echo "";;
	'emacs') echo ""; echo "Emacs - Text editor."; echo ""; echo " UPDATE: appman -u"; echo ""; echo "SITE: https://www.gnu.org/software/emacs/"; echo "SOURCE: https://github.com/probonopd/Emacs.AppImage"; echo "";;
	'firefox'|'firefox-stable'|'firefox-dev'|'firefox-development'|'firefox-esr'|'firefox-nightly'|'firefox-beta') echo ""; echo "Mozilla Firefox - Fast, powerful and extensible Web Browser."; echo "Firefox Stable (firefox), Firefox Development Edition (firefox-dev), Firefox Extended Support Release (firefox-esr) and Firefox Nightly builds (firefox-nightly)."; echo ""; echo " UPDATE: appman -u"; echo ""; echo "SITE: https://www.mozilla.org/firefox"; echo "SOURCE: https://github.com/srevinsaju/Firefox-Appimage"; echo "";;
	'freeCAD-mamba'|'freeCAD'|'freecad') echo ""; echo "FreeCAD - Free and open source AutoCAD alternative."; echo ""; echo "SITE: https://www.freecadweb.org"; echo "";;
	'google-chrome'|'chrome') echo ""; echo "Google Chrome - The most popular Web Browser, provided by Google LLC."; echo "This is the official version for Linux, unpacked (not an AppImage)."; echo ""; echo " UPDATE: appman -i chrome"; echo ""; echo "SITE: https://www.google.com/chrome"; echo "";;
	'ice'|'ice-ssb') echo ""; echo "Ice SSB - Webapp manager, convert your favourite Web pages to standalone apps."; echo ""; echo " UPDATE: appman -i ice"; echo ""; echo "SITE: https://github.com/peppermintos/ice"; echo "";;
	'kdenlive') echo ""; echo "Kdenlive - Video Editors provided for KDE."; echo "This is the 21.08 release."; echo "";echo "SITE: https://kdenlive.org"; echo "";;
	'libreoffice-still') echo ""; echo "Libreoffice - free and open source Office suite (Stable version)."; echo ""; echo " UPDATE: appman -i libreoffice-still"; echo ""; echo "SITE: https://www.libreoffice.org"; echo "SOURCE: https://www.libreoffice.org/download/appimage" ; echo "";; 
	'libreoffice-fresh') echo ""; echo "Libreoffice - free and open source Office suite (Latest version)."; echo ""; echo " UPDATE: appman -i libreoffice-fresh"; echo ""; echo "SITE: https://www.libreoffice.org"; echo "SOURCE: https://www.libreoffice.org/download/appimage" ; echo "";; 
	'ocenaudio') echo ""; echo "OcenAudio - Complete and User friendly Audio Editor."; echo ""; echo " UPDATE: appman -i ocenaudio"; echo ""; echo "SITE: https://www.ocenaudio.com"; echo "";;
	'onlyoffice') echo ""; echo "OnlyOffice - Office Suite with full support for MS Windows formats and online documents."; echo ""; echo " UPDATE: appman -i onlyoffice"; echo ""; echo "SITE: https://www.onlyoffice.com"; echo "";;
	'openshot'|'openshot-qt') echo ""; echo "Openshot - A powerful Video Editor"; echo "This is the 2.6.0 release."; echo ""; echo "SITE: https://www.openshot.org/"; echo "";;
	'photogimp') echo ""; echo "PhotoGIMP - A patched version of GIMP for Adobe Photoshop users."; echo ""; echo "SITE: https://github.com/Diolinux/PhotoGIMP."; echo ""; echo "SOURCE: https://github.com/sudo-give-me-coffee/PhotoMP"; echo "";;
	'photopea') echo ""; echo "Photopea- Advanced Photo Editor for professional use."; echo ""; echo "SITE: https://www.photopea.com/"; echo "SOURCE: https://github.com/spooknik/Photopea-Appimage"; echo "";;
	'pkg2appimage') echo ""; echo "pkg2appimage is a tool to compile an AppDir from a *.ylm recipe (see 'appimagetool')."; echo ""; echo " UPDATE: appman -u"; echo ""; echo "SITE: https://github.com/AppImage/pkg2appimage"; echo "";;
	'qbittorrent') echo ""; echo "qBittorrent - A powerful QT-based Bittorrent Client."; echo ""; echo " UPDATE: appman -i qbittorrent"; echo ""; echo "SITE: https://www.qbittorrent.org"; echo "SOURCE: https://launchpad.net/~qbittorrent-team";;
	'shotcut') echo ""; echo "Shotcut - A powerful Video Editor."; echo "This is the 21.08.29 release."; echo ""; echo "SITE: https://www.shotcut.org"; echo "SOURCE: https://github.com/mltframework/shotcut"; echo "";;
	'thunderbird') echo ""; echo "Thunderbird - Free and open source eMail client."; echo ""; echo " UPDATE: appman -u"; echo ""; echo "SITE: https://www.thunderbird.net"; echo "SOURCE: https://github.com/srevinsaju/thunderbird-appimage"; echo "";;
	'wine-stable'|'wine'|'wine-devel'|'wine-development'|'wine-staging') echo ""; echo "WINE - Compatibility layer to run MS Windows apps and games on GNU/Linux."; echo "This version is for both x86 and x64 MS Windows programs."; echo ""; echo " UPDATE: appman -u"; echo ""; echo "SITE: https://www.winehq.org"; echo "SOURCE: https://github.com/mmtrt/WINE_AppImage"; echo "";;
	esac
	shift
	done;;
# INSTALL
# MODEL	'APP') for i in "APP"; do wget $URL2/$i/$i-installer ; chmod a+x ./$i-installer ; exec /opt/bin/$i-installer ; done;;
#
  '-i'|'install')
	while [ -n "$1" ]
	do
	case $2 in
	'') echo "Syntax error: 'install' require an argoument."; echo "Run the command 'appman -s && appman -l' to get an updated list.";;
	'adb'|'fastboot'|'platform-tools') for i in "platform-tools"; do wget $URL2/$i/$i-installer ; chmod a+x ./$i-installer ; exec /opt/bin/$i-installer ; done;;
	'anydesk') for i in "anydesk"; do wget $URL2/$i/$i-installer ; chmod a+x ./$i-installer ; exec /opt/bin/$i-installer ; done;;
	'audacity') for i in "audacity"; do wget $URL2/$i/$i-installer ; chmod a+x ./$i-installer ; exec /opt/bin/$i-installer ; done;;
	'avidemux') for i in "avidemux"; do wget $URL2/$i/$i-installer ; chmod a+x ./$i-installer ; exec /opt/bin/$i-installer ; done;;
	'blender') for i in "blender"; do wget $URL2/$i/$i-installer ; chmod a+x ./$i-installer ; exec /opt/bin/$i-installer ; done;;
	'bottles'|'wine-bottles') for i in "wine-bottles"; do wget $URL2/$i/$i-installer ; chmod a+x ./$i-installer ; exec /opt/bin/$i-installer ; done;;
	'brave'|'brave-browser') for i in "brave-browser"; do wget $URL2/$i/$i-installer ; chmod a+x ./$i-installer ; exec /opt/bin/$i-installer ; done;;
	'celestia') for i in "celestia"; do wget $URL2/$i/$i-installer ; chmod a+x ./$i-installer ; exec /opt/bin/$i-installer ; done;;
	'celestia-dev') for i in "celestia-dev"; do wget $URL2/$i/$i-installer ; chmod a+x ./$i-installer ; exec /opt/bin/$i-installer ; done;;
	'chromium') for i in "chromium"; do wget $URL2/$i/$i-installer ; chmod a+x ./$i-installer ; exec /opt/bin/$i-installer ; done;;
	'chromium-dev'|'chromium-beta') for i in "chromium-dev"; do wget $URL2/$i/$i-installer ; chmod a+x ./$i-installer ; exec /opt/bin/$i-installer ; done;;
	'duckstation'|'duckstation-qt') for i in "duckstation"; do wget $URL2/$i/$i-installer ; chmod a+x ./$i-installer ; exec /opt/bin/$i-installer ; done;;
	'emacs') for i in "emacs"; do wget $URL2/$i/$i-installer ; chmod a+x ./$i-installer ; exec /opt/bin/$i-installer ; done;;
	'firefox'|'firefox-stable') for i in "firefox-stable"; do wget $URL2/$i/$i-installer ; chmod a+x ./$i-installer ; exec /opt/bin/$i-installer ; done;;
	'firefox-dev'|'firefox-development') for i in "firefox-dev"; do wget $URL2/$i/$i-installer ; chmod a+x ./$i-installer ; exec /opt/bin/$i-installer ; done;;
	'firefox-esr') for i in "firefox-esr"; do wget $URL2/$i/$i-installer ; chmod a+x ./$i-installer ; exec /opt/bin/$i-installer ; done;;
	'firefox-nightly'|'firefox-beta') for i in "firefox-nightly"; do wget $URL2/$i/$i-installer ; chmod a+x ./$i-installer ; exec /opt/bin/$i-installer ; done;;
	'freeCAD-mamba'|'freeCAD'|'freecad') for i in "freeCAD-mamba"; do wget $URL2/$i/$i-installer ; chmod a+x ./$i-installer ; exec /opt/bin/$i-installer ; done;;
	'google-chrome'|'chrome') for i in "google-chrome"; do wget $URL2/$i/$i-installer ; chmod a+x ./$i-installer ; exec /opt/bin/$i-installer ; done;;
	'ice'|'ice-ssb') for i in "ice"; do wget $URL2/$i/$i-installer ; chmod a+x ./$i-installer ; exec /opt/bin/$i-installer ; done;;
	'kdenlive') for i in "kdenlive"; do wget $URL2/$i/$i-installer ; chmod a+x ./$i-installer ; exec /opt/bin/$i-installer ; done;;
	'libreoffice-fresh') for i in "libreoffice-fresh"; do wget $URL2/$i/$i-installer ; chmod a+x ./$i-installer ; exec /opt/bin/$i-installer ; done;;
	'libreoffice-still') for i in "libreoffice-still"; do wget $URL2/$i/$i-installer ; chmod a+x ./$i-installer ; exec /opt/bin/$i-installer ; done;;
	'ocenaudio') for i in "ocenaudio"; do wget $URL2/$i/$i-installer ; chmod a+x ./$i-installer ; exec /opt/bin/$i-installer ; done;;
	'onlyoffice') for i in "onlyoffice"; do wget $URL2/$i/$i-installer ; chmod a+x ./$i-installer ; exec /opt/bin/$i-installer ; done;;
	'openshot'|'openshot-qt') for i in "openshot"; do wget $URL2/$i/$i-installer ; chmod a+x ./$i-installer ; exec /opt/bin/$i-installer ; done;;
	'photogimp') for i in "photogimp"; do wget $URL2/$i/$i-installer ; chmod a+x ./$i-installer ; exec /opt/bin/$i-installer ; done;;
	'photopea') for i in "photopea"; do wget $URL2/$i/$i-installer ; chmod a+x ./$i-installer ; exec /opt/bin/$i-installer ; done;;
	'qbittorrent') for i in "qbittorrent"; do wget $URL2/$i/$i-installer ; chmod a+x ./$i-installer ; exec /opt/bin/$i-installer ; done;;
	'shotcut') for i in "shotcut"; do wget $URL2/$i/$i-installer ; chmod a+x ./$i-installer ; exec /opt/bin/$i-installer ; done;;
	'thunderbird') for i in "thunderbird"; do wget $URL2/$i/$i-installer ; chmod a+x ./$i-installer ; exec /opt/bin/$i-installer ; done;;
	'wine-stable'|'wine') for i in "wine-stable"; do wget $URL2/$i/$i-installer ; chmod a+x ./$i-installer ; exec /opt/bin/$i-installer ; done;;
	'wine-devel'|'wine-development') for i in "wine-devel"; do wget $URL2/$i/$i-installer ;	chmod a+x ./$i-installer ; exec /opt/bin/$i-installer ; done;;
	'wine-staging') for i in "wine-staging"; do wget $URL2/$i/$i-installer ; chmod a+x ./$i-installer ; exec /opt/bin/$i-installer ; done;;
	esac
	shift
	done;;
# REMOVE
# MODEL	'APP') for i in "APP"; do rm /opt/bin/$i ~/$LOCAL1/$i.desktop ~/$LOCAL2/$i.svg; done;;
#
  '-r'|'remove')
	while [ -n "$1" ]
	do
	case $2 in
	'') appman -f;;
	'adb'|'fastboot'|'platform-tools') for i in "platform-tools"; do rm -R /opt/bin/adb /opt/bin/fastboot ~/.android/$i; done;;
	'anydesk') for i in "anydesk"; do rm /opt/bin/$i ~/$LOCAL1/$i.desktop ~/$LOCAL2/$i.svg; done;;
	'audacity') for i in "audacity"; do rm /opt/bin/$i ~/$LOCAL1/$i.desktop ~/$LOCAL2/$i.svg; done;;
	'avidemux') for i in "avidemux"; do rm /opt/bin/$i ~/$LOCAL1/$i.desktop ~/$LOCAL2/$i.svg; done;;
	'blender') for i in "blender"; do rm /opt/bin/$i ~/$LOCAL1/$i.desktop ~/$LOCAL2/$i.svg; done;;
	'bottles'|'wine-bottles') for i in "wine-bottles"; do rm /opt/bin/$i ~/$LOCAL1/$i.desktop ~/$LOCAL2/$i.svg; done;;
	'brave'|'brave-browser') for i in "brave-browser"; do rm /opt/bin/$i ~/$LOCAL1/$i.desktop ~/$LOCAL2/$i.svg; done;;
	'celestia') for i in "celestia"; do rm /opt/bin/$i ~/$LOCAL1/$i.desktop ~/$LOCAL2/$i.svg; done;;
	'celestia-dev') for i in "celestia-dev"; do rm /opt/bin/$i ~/$LOCAL1/$i.desktop ~/$LOCAL2/$i.svg; done;;
	'chromium') for i in "chromium"; do rm /opt/bin/$i ~/$LOCAL1/$i.desktop ~/$LOCAL2/$i.svg; done;;
	'chromium-dev'|'chromium-beta') for i in "chromium-dev"; do rm /opt/bin/$i ~/$LOCAL1/$i.desktop ~/$LOCAL2/$i.svg; done;;
	'duckstation'|'duckstation-qt') for i in "duckstation"; do rm /opt/bin/$i ~/$LOCAL1/$i.desktop ~/$LOCAL2/$i.svg; done;;
	'emacs') for i in "emacs"; do rm /opt/bin/$i ~/$LOCAL1/$i.desktop ~/$LOCAL2/$i.svg; done;;
	'firefox'|'firefox-stable') for i in "firefox-stable"; do rm /opt/bin/$i ~/$LOCAL1/$i.desktop ~/$LOCAL2/$i.svg; done;;
	'firefox-dev'|'firefox-development') for i in "firefox-dev"; do rm /opt/bin/$i ~/$LOCAL1/$i.desktop ~/$LOCAL2/$i.svg; done;;
	'firefox-esr') for i in "firefox-esr"; do rm /opt/bin/$i ~/$LOCAL1/$i.desktop ~/$LOCAL2/$i.svg; done;;
	'firefox-nightly'|'firefox-beta') for i in "firefox-nightly"; do rm /opt/bin/$i ~/$LOCAL1/$i.desktop ~/$LOCAL2/$i.svg; done;;
	'freeCAD-mamba'|'freeCAD'|'freecad') for i in "freeCAD-mamba"; do rm /opt/bin/$i ~/$LOCAL1/$i.desktop ~/$LOCAL2/$i.svg; done;;
	'google-chrome'|'chrome') for i in "google-chrome"; do rm -R /opt/bin/$i ~/$LOCAL1/$i.desktop ~/$LOCAL2/$i.svg ~/.local/share/$i; done;;
	'ice'|'ice-ssb') for i in "ice"; do rm /opt/bin/$i ~/$LOCAL1/$i.desktop ~/$LOCAL2/$i.svg; done;;
	'kdenlive') for i in "kdenlive"; do rm /opt/bin/$i ~/$LOCAL1/$i.desktop ~/$LOCAL2/$i.svg; done;;
	'libreoffice-fresh') for i in "libreoffice-fresh"; do rm /opt/bin/$i ~/$LOCAL1/$i.desktop ~/$LOCAL2/$i.svg; done;;
	'libreoffice-still') for i in "libreoffice-still"; do rm /opt/bin/$i ~/$LOCAL1/$i.desktop ~/$LOCAL2/$i.svg; done;;
	'ocenaudio') for i in "ocenaudio"; do rm /opt/bin/$i ~/$LOCAL1/$i.desktop ~/$LOCAL2/$i.svg; done;;
	'onlyoffice') for i in "onlyoffice"; do rm /opt/bin/$i ~/$LOCAL1/$i.desktop ~/$LOCAL2/$i.svg; done;;
	'openshot'|'openshot-qt') for i in "openshot"; do rm /opt/bin/$i ~/$LOCAL1/$i.desktop ~/$LOCAL2/$i.svg; done;;
	'photogimp') for i in "photogimp"; do rm /opt/bin/$i ~/$LOCAL1/$i.desktop ~/$LOCAL2/$i.svg; done;;
	'photopea') for i in "photopea"; do rm /opt/bin/$i ~/$LOCAL1/$i.desktop ~/$LOCAL2/$i.svg; done;;
	'qbittorrent') for i in "qbittorrent"; do rm /opt/bin/$i ~/$LOCAL1/$i.desktop ~/$LOCAL2/$i.svg; done;;
	'shotcut') for i in "shotcut"; do rm /opt/bin/$i ~/$LOCAL1/$i.desktop ~/$LOCAL2/$i.svg; done;;
	'thunderbird') for i in "thunderbird"; do rm /opt/bin/$i ~/$LOCAL1/$i.desktop ~/$LOCAL2/$i.svg; done;;
	'wine-stable'|'wine') for i in "wine-stable"; do rm /opt/bin/$i; done;;
	'wine-devel'|'wine-development') for i in "wine-devel"; do rm /opt/bin/$i; done;;
	'wine-staging') for i in "wine-staging"; do rm /opt/bin/$i; done;;
	esac
	shift
	done;;	
  *) exec /opt/bin/appman ;;
esac
