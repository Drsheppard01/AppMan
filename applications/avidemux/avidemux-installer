#!/bin/sh

cd /opt/bin
mkdir /tmp
cd tmp
echo "app: avidemux
binpatch: true

ingredients:
  dist: bullseye
  sources:
    - deb https://www.deb-multimedia.org bullseye main non-free
    - deb http://ftp.us.debian.org/debian/ bullseye main contrib non-free" >> /opt/bin/tmp/recipe.yml;
pkg2appimage ./recipe.yml;
cp /opt/bin/tmp/avidemux/avidemux.AppDir/usr/share/icons/hicolor/128x128/apps/org.avidemux.Avidemux.png /opt/bin/tmp/avidemux/avidemux.AppDir/;
rm /opt/bin/tmp/avidemux/avidemux.AppDir/AppRun;




echo '#!/bin/bash

OPENGL_NAME="libGL.so.1"
PULSE_NAME="libpulse-simple.so.0"
LIBVA_NAME="libva.so.2"
LIBVDPAU_NAME="libvdpau.so.1"

if ! (/sbin/ldconfig -p | grep -q ${OPENGL_NAME})
then
    echo "Legacy OpenGL library (${OPENGL_NAME}) not found on host, aborting."
    exit 1
fi
if ! (/sbin/ldconfig -p | grep -q ${PULSE_NAME})
then
    echo "PulseAudio Simple API library (${PULSE_NAME}) not found on host, aborting."
    exit 1
fi

# make relative-path arguments absolute before changing directory
args=("--portable");
paramprefix="--";
param="--load";#enable filename as first/single argument, with --load as supposed default action
for arg in "$@";
do # add argument as is, or realpath of argument, depending on paramprefix
	[ "${arg::2}" = "$paramprefix" ] && args+=("$arg") && param="$arg" || {
		case "$param" in
		--append|--load|--run|--save*)
			args+=("$(realpath -- "$arg")") ;;
		*)
			args+=("$arg") ;;
		esac
	}
	[ "$arg" == "$paramprefix" ] && paramprefix="123" && param="--load"; # new paramprefix will never match length-2 string again
done;
HERE="$(dirname "$(readlink -f "${0}")")"
cd "${HERE}/usr/"
#export QT_STYLE_OVERRIDE="fusion"
FT_PROBE_EXE_NAME="freetype_probe"
if [ -z "${ADM_APPIMAGE_USE_SYSTEM_FONT_LIBS}" ] && [ -e "${HERE}/${FT_PROBE_EXE_NAME}" ]; then
    "${HERE}/${FT_PROBE_EXE_NAME}"
    ADM_APPIMAGE_USE_SYSTEM_FONT_LIBS=$?
fi
if [ "x${ADM_APPIMAGE_USE_SYSTEM_FONT_LIBS}" != "x1" ]
then
    echo "Using bundled freetype, fontconfig and fribidi." \
         "Export ADM_APPIMAGE_USE_SYSTEM_FONT_LIBS=1 to use the system ones instead."
    echo "This is recommended for systems with fontconfig >= 2.13"
    LD_LIBRARY_PATH="${HERE}/opt/lib:${LD_LIBRARY_PATH}"
else
    echo "Using system freetype, fontconfig and fribidi."
fi

if (/sbin/ldconfig -p | grep -q ${LIBVA_NAME})
then
    echo "Using system libva."
else
    echo "${LIBVA_NAME} not found on host, using bundled version."
    LD_LIBRARY_PATH="${HERE}/usr/lib/va:${LD_LIBRARY_PATH}"
fi

if (/sbin/ldconfig -p | grep -q ${LIBVDPAU_NAME})
then
    echo "Using system libvdpau."
else
    echo "${LIBVDPAU_NAME} not found on host, using bundled version."
    LD_LIBRARY_PATH="${HERE}/usr/lib/vdpau:${LD_LIBRARY_PATH}"
fi

export LD_LIBRARY_PATH="${HERE}/usr/lib/:${HERE}/usr/lib/qt5:${LD_LIBRARY_PATH}"
export PATH="${HERE}/usr/bin:${PATH}"
# choose binary depending on substrings "_jobs" or "_cli" in the name appImage is called by
if [[ "${ARGV0##*/}" =~ _jobs ]]
then "${HERE}/usr/bin/avidemux3_jobs_qt5" "${args[@]}"
elif [[ "${ARGV0##*/}" =~ _cli ]]
then "${HERE}/usr/bin/avidemux3_cli" "${args[@]}"
else "${HERE}/usr/bin/avidemux3_qt5" "${args[@]}"
fi
cd -' >> /opt/bin/tmp/avidemux/avidemux.AppDir/AppRun;
chmod a+x /opt/bin/tmp/avidemux/avidemux.AppDir/AppRun;

ARCH=x86_64 appimagetool -n ./avidemux/avidemux.AppDir;

cd ..;

mv /opt/bin/tmp/*AppImage /opt/bin/avidemux; 
chmod a+x /opt/bin/avidemux;
echo "[Desktop Entry]
Name=Avidemux
GenericName=Video Editor
Comment=Multiplatform video editor
Exec=/opt/bin/avidemux %U
Icon=avidemux
Terminal=false
Type=Application
Categories=AudioVideo;AudioVideoEditing;Video;
MimeType=video/mpeg;video/x-mpeg;video/mp4;video/x-m4v;video/quicktime;video/3gp;video/mkv;video/x-matroska;video/webm;video/flv;video/x-flv;video/dv;video/x-msvideo;video/x-ms-wmv;video/x-ms-asf;video/x-anim;" >> /home/$USER/.local/share/applications/avidemux.desktop;
wget https://raw.githubusercontent.com/ivan-hc/AppMan/main/applications/avidemux/avidemux.svg;
mv ./avidemux.svg /home/$USER/.local/share/icons/;
rm -R /opt/bin/avidemux-installer /opt/bin/tmp
